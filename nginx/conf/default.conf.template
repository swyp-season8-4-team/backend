# 서버 블록 설정 파일
# 특정 도메인에 대한 라우팅, SSL, 프록시, CORS 등의 설정을 정의합니다.

# HTTPS 서버 설정 (443 포트)
server {
    listen 443 ssl;
    server_name ${SERVER_NAME};

    # SSL 인증서 설정
    ssl_certificate /etc/letsencrypt/live/${SERVER_NAME}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${SERVER_NAME}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # 모든 요청에 대한 처리
    location / {
        # Spring Boot 애플리케이션으로 요청 프록시
        proxy_pass http://app:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 디바이스 ID 쿠키를 헤더로 변환 (다중 기기 로그인 지원)
        if ($cookie_deviceId) {
            proxy_set_header X-Device-ID $cookie_deviceId;
        }

        # Authorization 헤더 처리
        set $auth_header "";
        if ($http_authorization) {
            set $auth_header $http_authorization;
        }
        proxy_set_header Authorization $auth_header;

        # CORS 설정
        set $cors_origin "";
        if ($http_origin ~* "(https://desserbee.com|https://www.desserbee.com|http://desserbee.com|http://www.desserbee.com|https://${SERVER_NAME}|https://frontend-desserbee-web-git-vercel-test-eepyzs-projects.vercel.app)") {
            set $cors_origin $http_origin;
        }

        # CORS 헤더 추가
        add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
        add_header 'Access-Control-Allow-Credentials' "true" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Email-Verification-Token, X-Device-ID' always;
        add_header 'Access-Control-Expose-Headers' 'Authorization, Set-Cookie, X-Email-Verification-Token' always;

        # OPTIONS 요청 처리
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' "$cors_origin";
            add_header 'Access-Control-Allow-Credentials' "true";
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Email-Verification-Token, X-Device-ID';
            add_header 'Access-Control-Expose-Headers' 'Authorization, Set-Cookie, X-Email-Verification-Token';
            add_header 'Access-Control-Max-Age' 3600;
            return 204;
        }
    }
}

# HTTP 서버 설정 (80 포트)
server {
    listen 80;
    server_name ${SERVER_NAME};

    # 모든 HTTP 요청을 HTTPS로 리다이렉트
    location / {
        return 301 https://$host$request_uri;
    }
}